- name: user installing
  hosts: user
  become: yes

  tasks:
  - name: installing rpm artifact
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: installing nodejs
    ansible.builtin.yum:
     name: nodejs
     state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out #output is variable name
    ignore_errors: true

  - when: out.rc != 0
    name: create user roboshop
    ansible.builtin.user:
      name: roboshop     

  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downloading user artifacts         
    ansible.builtin.get_url: 
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: extract user artifacts    
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: install npm
    ansible.builtin.command: npm install 
    args:
      chdir: /app    

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: system demon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copying mongo repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongod-org-shell
    ansible.builtin.yum:
     name: mongodb-org-shell
     state: installed

  - name: load schema
    ansible.builtin.command: mongo --host 172.31.16.142 </app/schema/user.js  

  - name: user reload and start
    ansible.builtin.service:
     name: user
     state: started
     enabled: true    
